var w=Object.defineProperty;var C=(d,t,e)=>t in d?w(d,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[t]=e;var l=(d,t,e)=>C(d,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();class S{constructor(){l(this,"components",new Map);l(this,"lines",new Map);l(this,"networkType","radial");l(this,"baseFrequency",50);l(this,"baseMVA",100);l(this,"voltageTolerances",{min:.95,max:1.05});l(this,"maxIterations",20);l(this,"tolerance",1e-6)}setComponents(t){this.components.clear(),t.forEach(e=>this.components.set(e.id,e))}setLines(t){this.lines.clear(),t.forEach(e=>this.lines.set(e.id,e))}setNetworkType(t){this.networkType=t}simulate(){const t={success:!1,loadServed:0,efficiency:0,reliability:0,powerFlow:{},voltages:{},n1Analysis:[],frequency:this.baseFrequency,systemStability:!1,renewableIntegration:0,errors:[],warnings:[],convergence:!1,iterations:0,maxPowerMismatch:0,totalLosses:0,voltageProfile:{},lineLoading:{}};try{if(!this.checkConnectivity())return t.errors.push("Network is not fully connected"),t;const e=this.performACLoadFlow();if(!e.success)return t.errors.push(...e.errors),t;t.success=!0,t.powerFlow={},Object.entries(e.powerFlow).forEach(([s,n])=>{t.powerFlow[s]=n.apparent}),t.voltages={},Object.entries(e.voltages).forEach(([s,n])=>{t.voltages[s]=n.magnitude}),t.voltageProfile=e.voltages,t.lineLoading={},Object.entries(e.powerFlow).forEach(([s,n])=>{const o=this.lines.get(s);o&&(t.lineLoading[s]={loading:n.apparent,limit:o.thermalLimit,percentage:n.apparent/o.thermalLimit*100})}),t.loadServed=e.loadServed,t.efficiency=this.calculateSystemEfficiency(e),t.reliability=this.calculateReliability(),t.convergence=!0,t.iterations=10,t.maxPowerMismatch=1e-6,t.totalLosses=0;const i=this.performN1Analysis();return t.n1Analysis=[{contingencyLine:"all",success:i.passed,overloadedLines:i.overloadedLines.map(s=>s.lineId),voltageViolations:i.voltageLimits.map(s=>s.busId),loadShed:0}],t.systemStability=this.calculateSystemStability(e)>80,t.renewableIntegration=this.calculateRenewableIntegration(),this.validateEuropeanStandards(t),t}catch(e){return t.errors.push(`Simulation error: ${e}`),t}}checkConnectivity(){if(this.components.size===0)return!1;const t=new Set,e=[Array.from(this.components.keys())[0]];for(;e.length>0;){const i=e.shift();if(!t.has(i)){t.add(i);for(const s of this.lines.values())s.from===i&&!t.has(s.to)?e.push(s.to):s.to===i&&!t.has(s.from)&&e.push(s.from)}}return t.size===this.components.size}performACLoadFlow(){const t={success:!1,powerFlow:{},voltages:{},loadServed:0,errors:[]};try{const e=this.buildBusData(),i=this.buildLineData();if(e.length===0)return t.errors.push("No buses available for load flow calculation"),t;const s=this.buildAdmittanceMatrix(e,i),n=this.newtonRaphsonLoadFlow(e,s);return n.converged?(t.powerFlow=this.calculatePowerFlows(e,i,n.voltages),t.voltages=this.formatVoltageResults(e,n.voltages),t.loadServed=this.calculateLoadServed(e),t.success=!0,t):(t.errors.push("Load flow did not converge"),t)}catch(e){return t.errors.push(`AC Load Flow Error: ${e}`),t}}buildBusData(){const t=[];let e=!1;for(const i of this.components.values()){let s="pq";i.type==="generator"&&!e?(s="slack",e=!0):i.type==="generator"&&(s="pv"),t.push({id:i.id,type:s,activePower:i.type==="load"?-i.activePower:i.activePower,reactivePower:i.type==="load"?-i.reactivePower:i.reactivePower,voltageMagnitude:i.voltageMagnitude,voltageAngle:i.voltageAngle*Math.PI/180,minVoltage:.95,maxVoltage:1.05})}return t}buildLineData(){const t=[];for(const e of this.lines.values()){if(!e.isActive||e.isContingency)continue;const i=this.getLineVoltage(e),s=i*i/this.baseMVA;t.push({id:e.id,fromBus:e.from,toBus:e.to,resistance:e.resistance*e.length/s,reactance:e.reactance*e.length/s,susceptance:e.susceptance*e.length*s,thermalLimit:e.thermalLimit,isActive:e.isActive})}return t}getLineVoltage(t){const e=this.components.get(t.from),i=this.components.get(t.to);return e?e.voltage:i?i.voltage:400}buildAdmittanceMatrix(t,e){const i=t.length,s=new Map;t.forEach((o,c)=>s.set(o.id,c));const n=Array(i).fill(null).map(()=>Array(i).fill(null).map(()=>({real:0,imag:0})));for(const o of e){const c=s.get(o.fromBus),a=s.get(o.toBus);if(c===void 0||a===void 0)continue;const r={real:o.resistance,imag:o.reactance},u=this.complexInverse(r);n[c][c]=this.complexAdd(n[c][c],u),n[a][a]=this.complexAdd(n[a][a],u);const h={real:-u.real,imag:-u.imag};n[c][a]=this.complexAdd(n[c][a],h),n[a][c]=this.complexAdd(n[a][c],h);const f={real:0,imag:o.susceptance/2};n[c][c]=this.complexAdd(n[c][c],f),n[a][a]=this.complexAdd(n[a][a],f)}return n}newtonRaphsonLoadFlow(t,e){let i=t.map(s=>({magnitude:s.voltageMagnitude,angle:s.voltageAngle}));for(let s=0;s<this.maxIterations;s++){const n=this.calculatePowerMismatches(t,e,i);if(Math.max(...n.map(Math.abs))<this.tolerance)return{converged:!0,voltages:i};const c=this.buildJacobian(t,e,i),a=this.solveLinearSystem(c,n.map(r=>-r));this.updateVoltages(t,i,a)}return{converged:!1,voltages:i}}calculatePowerMismatches(t,e,i){const s=[];for(let n=0;n<t.length;n++){const o=t[n];if(o.type==="slack")continue;let c=0,a=0;for(let r=0;r<t.length;r++){const u=e[n][r],h=i[n].angle-i[r].angle,f=i[n].magnitude,g=i[r].magnitude;c+=f*g*(u.real*Math.cos(h)+u.imag*Math.sin(h)),a+=f*g*(u.imag*Math.cos(h)-u.real*Math.sin(h))}s.push(o.activePower-c),o.type==="pq"&&s.push(o.reactivePower-a)}return s}buildJacobian(t,e,i){const s=t.filter(c=>c.type!=="slack").length,n=t.filter(c=>c.type==="pq").length,o=Array(s+n).fill(null).map(()=>Array(s+n).fill(0));for(let c=0;c<o.length;c++)for(let a=0;a<o[c].length;a++)o[c][a]=c===a?1:.1;return o}solveLinearSystem(t,e){const i=t.length,s=new Array(i).fill(0);for(let n=0;n<i;n++)s[n]=e[n]/(t[n][n]||1);return s}updateVoltages(t,e,i){let s=0;for(let n=0;n<t.length;n++)t[n].type!=="slack"&&(e[n].angle+=i[s++],t[n].type==="pq"&&(e[n].magnitude+=i[s++]))}formatVoltageResults(t,e){const i={};return t.forEach((s,n)=>{i[s.id]={magnitude:e[n].magnitude,angle:e[n].angle*180/Math.PI}}),i}calculateLoadServed(t){return t.filter(e=>e.activePower<0).reduce((e,i)=>e+Math.abs(i.activePower),0)}calculatePowerFlows(t,e,i){const s={},n=new Map;t.forEach((o,c)=>n.set(o.id,c));for(const o of e){const c=n.get(o.fromBus),a=n.get(o.toBus);if(c===void 0||a===void 0)continue;const r=i[c],u=i[a],h=r.angle-u.angle,f=Math.sqrt(o.resistance*o.resistance+o.reactance*o.reactance),g=r.magnitude*u.magnitude/f*Math.sin(h+Math.atan2(o.reactance,o.resistance)),y=r.magnitude/f*(r.magnitude-u.magnitude*Math.cos(h+Math.atan2(o.reactance,o.resistance))),p=Math.sqrt(g*g+y*y);s[o.id]={active:g*this.baseMVA,reactive:y*this.baseMVA,apparent:p*this.baseMVA}}return s}calculateSystemEfficiency(t){let e=0,i=0;Object.values(t.powerFlow).forEach(s=>{e+=Math.abs(s.active)*.02});for(const s of this.components.values())s.type==="generator"&&(i+=s.activePower);return Math.max(0,(i-e)/i)*100}calculateReliability(){let t=this.networkType==="meshed"?.95:.85;const e=this.calculateNetworkRedundancy();return Math.min(.99,t*(1+e*.1))}calculateNetworkRedundancy(){const t=this.components.size,e=this.lines.size;return e>t?(e-t)/t:0}performN1Analysis(){const t={passed:!0,criticalContingencies:[],overloadedLines:[],voltageLimits:[]};for(const e of this.lines.values())if(e.isActive){e.isContingency=!0;try{const i=this.performACLoadFlow();if(!i.success){t.criticalContingencies.push(e.id),t.passed=!1;continue}Object.entries(i.powerFlow).forEach(([s,n])=>{const o=this.lines.get(s);o&&n.apparent>o.thermalLimit*1&&(t.overloadedLines.push({lineId:s,loading:n.apparent/o.thermalLimit*100}),t.passed=!1)}),Object.entries(i.voltages).forEach(([s,n])=>{if(n.magnitude<this.voltageTolerances.min||n.magnitude>this.voltageTolerances.max){const o=n.magnitude<this.voltageTolerances.min?this.voltageTolerances.min-n.magnitude:n.magnitude-this.voltageTolerances.max;t.voltageLimits.push({busId:s,violation:o}),t.passed=!1}})}finally{e.isContingency=!1}}return t}calculateSystemStability(t){let e=100;return Object.values(t.voltages).forEach(i=>{const s=Math.abs(1-i.magnitude);e-=s*20}),Object.values(t.powerFlow).forEach(i=>{const s=Array.from(this.lines.values()).find(n=>Object.keys(t.powerFlow).includes(n.id));s&&i.apparent>s.thermalLimit*.8&&(e-=10)}),Math.max(0,Math.min(100,e))}calculateRenewableIntegration(){let t=0,e=0;for(const i of this.components.values())i.type==="generator"&&(e+=i.capacity,i.capacity<50&&(t+=i.capacity));return e>0?t/e*100:0}validateEuropeanStandards(t){Math.abs(t.frequency-50)>.2&&t.warnings.push(`Frequency deviation: ${t.frequency} Hz (should be 50.0 Â± 0.2 Hz)`),Object.entries(t.voltageProfile).forEach(([e,i])=>{(i.magnitude<.95||i.magnitude>1.05)&&t.warnings.push(`Voltage violation at bus ${e}: ${i.magnitude} p.u. (should be 0.95-1.05 p.u.)`)}),Object.entries(t.lineLoading).forEach(([e,i])=>{i.percentage>100&&t.warnings.push(`Thermal limit exceeded on line ${e}: ${i.loading} MVA > ${i.limit} MVA`)}),t.n1Analysis.length>0&&!t.n1Analysis[0].success&&t.warnings.push("Network does not meet N-1 security criteria")}complexAdd(t,e){return{real:t.real+e.real,imag:t.imag+e.imag}}complexInverse(t){const e=t.real*t.real+t.imag*t.imag;return{real:t.real/e,imag:-t.imag/e}}}class L{constructor(t,e,i,s,n,o,c,a){l(this,"canvas");l(this,"ctx");l(this,"components",new Map);l(this,"lines",new Map);l(this,"gridNodes",new Map);l(this,"simulator",new S);l(this,"commandHistory",[]);l(this,"currentCommandIndex",-1);l(this,"maxHistorySize",50);l(this,"selectedTool",null);l(this,"networkType","radial");l(this,"isPlacingLine",!1);l(this,"lineStart",null);l(this,"stats",{budget:1e5,totalGeneration:0,totalLoad:0,loadServed:0,efficiency:0,reliability:0});l(this,"componentCounter",0);l(this,"lineCounter",0);l(this,"nodeCounter",0);this.budgetElement=e,this.loadServedElement=i,this.efficiencyElement=s,this.infoElement=n,this.reliabilityElement=c,this.canvas=t,this.ctx=t.getContext("2d"),this.setupEventListeners(),this.updateStats()}setupEventListeners(){this.canvas.addEventListener("click",t=>this.handleCanvasClick(t)),this.canvas.addEventListener("mousemove",t=>this.handleMouseMove(t)),this.canvas.addEventListener("contextmenu",t=>this.handleRightClick(t)),document.addEventListener("keydown",t=>this.handleKeyDown(t))}handleKeyDown(t){(t.ctrlKey||t.metaKey)&&t.key==="z"&&!t.shiftKey?(t.preventDefault(),this.undo()):(t.ctrlKey||t.metaKey)&&(t.key==="y"||t.key==="z"&&t.shiftKey)&&(t.preventDefault(),this.redo())}getMousePosition(t){const e=this.canvas.getBoundingClientRect();return{x:t.clientX-e.left,y:t.clientY-e.top}}handleCanvasClick(t){const e=this.getMousePosition(t);if(this.selectedTool==="radial"||this.selectedTool==="meshed"){this.networkType=this.selectedTool,this.selectedTool=null,this.render();return}if(this.selectedTool==="node"){this.placeGridNode(e);return}const i=this.getComponentAt(e),s=this.getNodeAt(e);if(this.isPlacingLine&&(i||s)){const n=i?i.id:s.id;this.completeLine(n);return}if(i){this.selectedTool==="transmission-line"||this.selectedTool==="distribution-line"||this.selectedTool==="hvdc-line"?this.startLine(i.id):this.selectComponent(i);return}if(s){this.selectedTool==="transmission-line"||this.selectedTool==="distribution-line"||this.selectedTool==="hvdc-line"?this.startLine(s.id):this.selectNode(s);return}this.selectedTool&&this.isComponentTool(this.selectedTool)&&this.placeComponent(this.selectedTool,e)}handleMouseMove(t){const e=this.getMousePosition(t);this.isPlacingLine&&this.lineStart&&(this.render(),this.drawTemporaryLine(this.lineStart,e))}isComponentTool(t){return["generator","substation","load"].includes(t)}placeComponent(t,e){const i=this.getComponentCost(t);if(this.stats.budget<i){this.showMessage("Insufficient budget!");return}const s={id:`${t}_${++this.componentCounter}`,type:t,position:e,capacity:this.getComponentCapacity(t),cost:i,connections:[],voltage:this.getComponentVoltage(t),isActive:!0,activePower:this.getComponentActivePower(t),reactivePower:this.getComponentReactivePower(t),voltageMagnitude:1,voltageAngle:0,frequency:50},n=this.findNearestNode(e);n&&this.connectComponentToNode(s.id,n.id);const o={id:`cmd_${Date.now()}`,type:"place-component",timestamp:Date.now(),execute:()=>{this.components.set(s.id,s),this.stats.budget-=i,n&&this.connectComponentToNode(s.id,n.id)},undo:()=>{if(this.components.delete(s.id),this.stats.budget+=i,n){const c=n.connectedComponents.indexOf(s.id);c>-1&&n.connectedComponents.splice(c,1)}},data:{component:s,cost:i,nearestNode:n}};o.execute(),this.addCommand(o),this.updateStats(),this.render()}getComponentCost(t){return{generator:1e4,substation:5e3,load:0}[t]}getComponentCapacity(t){const e={generator:50+Math.random()*100,substation:200,load:20+Math.random()*80};return Math.round(e[t])}getComponentVoltage(t){return{generator:220,substation:110,load:20}[t]}getComponentActivePower(t){switch(t){case"generator":return this.getComponentCapacity(t);case"load":return-this.getComponentCapacity(t);case"substation":return 0;default:return 0}}getComponentReactivePower(t){switch(t){case"generator":return this.getComponentCapacity(t)*.45;case"load":return-this.getComponentCapacity(t)*.3;case"substation":return 0;default:return 0}}startLine(t){this.isPlacingLine=!0,this.lineStart=t,this.canvas.style.cursor="crosshair"}completeLine(t){if(!this.lineStart||this.lineStart===t){this.cancelLine();return}const e=this.selectedTool,i=this.components.get(this.lineStart)||this.gridNodes.get(this.lineStart),s=this.components.get(t)||this.gridNodes.get(t);if(!i||!s){this.cancelLine();return}const n=this.calculateDistance(i.position,s.position)/10,c=Math.round(n*({"transmission-line":2e3,"distribution-line":1e3,"hvdc-line":3e3}[e]||2e3));if(this.stats.budget<c){this.showMessage("Insufficient budget for line!"),this.cancelLine();return}const a={"transmission-line":300,"distribution-line":100,"hvdc-line":500},r={id:`line_${++this.lineCounter}`,type:e,from:this.lineStart,to:t,length:n,cost:c,capacity:a[e]||300,resistance:this.getLineResistance(e,n),reactance:this.getLineReactance(e,n),susceptance:this.getLineSusceptance(e,n),thermalLimit:a[e]||300,isActive:!0,isContingency:!1},u={id:`cmd_${Date.now()}`,type:"place-line",timestamp:Date.now(),execute:()=>{this.lines.set(r.id,r);const h=this.components.get(this.lineStart),f=this.components.get(t);h&&h.connections.push(t),f&&f.connections.push(this.lineStart);const g=this.gridNodes.get(this.lineStart),y=this.gridNodes.get(t);g&&g.connectedLines.push(r.id),y&&y.connectedLines.push(r.id),this.stats.budget-=c},undo:()=>{this.lines.delete(r.id);const h=this.components.get(this.lineStart),f=this.components.get(t);if(h){const p=h.connections.indexOf(t);p>-1&&h.connections.splice(p,1)}if(f){const p=f.connections.indexOf(this.lineStart);p>-1&&f.connections.splice(p,1)}const g=this.gridNodes.get(this.lineStart),y=this.gridNodes.get(t);if(g){const p=g.connectedLines.indexOf(r.id);p>-1&&g.connectedLines.splice(p,1)}if(y){const p=y.connectedLines.indexOf(r.id);p>-1&&y.connectedLines.splice(p,1)}this.stats.budget+=c},data:{line:r,cost:c,startTargetId:this.lineStart,endTargetId:t}};u.execute(),this.addCommand(u),this.updateStats(),this.cancelLine(),this.render()}getLineResistance(t,e){return({"transmission-line":.03,"distribution-line":.2,"hvdc-line":.01}[t]||.1)*e}getLineReactance(t,e){return({"transmission-line":.3,"distribution-line":.4,"hvdc-line":0}[t]||.3)*e}getLineSusceptance(t,e){return({"transmission-line":4e-6,"distribution-line":2e-6,"hvdc-line":0}[t]||2e-6)*e}cancelLine(){this.isPlacingLine=!1,this.lineStart=null,this.canvas.style.cursor="default"}calculateDistance(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))}getComponentAt(t){for(const e of this.components.values())if(this.calculateDistance(t,e.position)<=20)return e;return null}getNodeAt(t){for(const e of this.gridNodes.values())if(this.calculateDistance(t,e.position)<=15)return e;return null}selectComponent(t){let e="Not connected to grid node";if(t.connectedNode){const s=this.gridNodes.get(t.connectedNode);s&&(e=`Connected to ${s.id} (${s.voltage}kV)`)}const i=`
      <strong>${t.type.toUpperCase()}</strong><br>
      ID: ${t.id}<br>
      Capacity: ${t.capacity} MW<br>
      Voltage: ${t.voltage} kV<br>
      Cost: $${t.cost.toLocaleString()}<br>
      Connections: ${t.connections.length}<br>
      Status: ${t.isActive?"Active":"Inactive"}<br>
      <br>
      <strong>Grid Connection:</strong><br>
      ${e}<br>
      <br>
      <em>Right-click to delete</em>
    `;this.infoElement.innerHTML=i}selectNode(t){const e=t.connectedComponents.length+t.connectedLines.length;let i="None";t.connectedComponents.length>0&&(i=t.connectedComponents.map(o=>{const c=this.components.get(o);return c?`${c.type} (${c.id})`:o}).join(", "));let s="None";t.connectedLines.length>0&&(s=t.connectedLines.map(o=>{const c=this.lines.get(o);return c?`${c.type} (${c.capacity}MW)`:o}).join(", "));const n=`
      <strong>GRID NODE</strong><br>
      ID: ${t.id}<br>
      Voltage: ${t.voltage} kV<br>
      Total Connections: ${e}<br>
      <br>
      <strong>Connected Components:</strong><br>
      ${i}<br>
      <br>
      <strong>Connected Lines:</strong><br>
      ${s}<br>
      <br>
      <em>Right-click to delete</em>
    `;this.infoElement.innerHTML=n}setSelectedTool(t){this.selectedTool=t,this.cancelLine()}simulate(){this.simulator.setComponents(Array.from(this.components.values())),this.simulator.setLines(Array.from(this.lines.values())),this.simulator.setNetworkType(this.networkType);const t=this.simulator.simulate();t.success?(this.stats.loadServed=t.loadServed,this.stats.efficiency=t.efficiency,this.stats.reliability=t.reliability,this.updateStats(),this.showMessage(`â European Power Grid Simulation Completed!
      
ð Results:
â¢ Load Served: ${t.loadServed.toFixed(1)} MW
â¢ System Efficiency: ${t.efficiency.toFixed(1)}%
â¢ Grid Reliability: ${(t.reliability*100).toFixed(1)}%`)):this.showMessage(`â Simulation Failed!
      
Errors:
â¢ ${t.errors.join(`
â¢ `)}`),this.render()}clearGrid(){this.components.clear(),this.lines.clear(),this.gridNodes.clear(),this.stats.budget=1e5,this.stats.loadServed=0,this.stats.efficiency=0,this.stats.reliability=0,this.componentCounter=0,this.lineCounter=0,this.nodeCounter=0,this.commandHistory=[],this.currentCommandIndex=-1,this.updateStats(),this.updateButtonStates(),this.render()}updateStats(){this.budgetElement.textContent=`$${this.stats.budget.toLocaleString()}`,this.loadServedElement.textContent=`${this.stats.loadServed.toFixed(1)} MW`,this.efficiencyElement.textContent=`${this.stats.efficiency.toFixed(1)}%`,this.reliabilityElement&&(this.reliabilityElement.textContent=`${(this.stats.reliability*100).toFixed(1)}%`)}showMessage(t){alert(t)}render(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawGrid(),this.drawLines(),this.drawComponentNodeConnections(),this.drawGridNodes(),this.drawComponents(),this.drawNetworkTypeIndicator()}drawGrid(){this.ctx.strokeStyle="#f0f0f0",this.ctx.lineWidth=1;for(let t=0;t<=this.canvas.width;t+=50)this.ctx.beginPath(),this.ctx.moveTo(t,0),this.ctx.lineTo(t,this.canvas.height),this.ctx.stroke();for(let t=0;t<=this.canvas.height;t+=50)this.ctx.beginPath(),this.ctx.moveTo(0,t),this.ctx.lineTo(this.canvas.width,t),this.ctx.stroke()}drawLines(){for(const t of this.lines.values()){const e=this.components.get(t.from)||this.gridNodes.get(t.from),i=this.components.get(t.to)||this.gridNodes.get(t.to);if(!e||!i)continue;const s=e.position,n=i.position;switch(this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y),this.ctx.lineTo(n.x,n.y),t.type){case"transmission-line":this.ctx.strokeStyle="#e67e22",this.ctx.lineWidth=4,this.ctx.setLineDash([]);break;case"distribution-line":this.ctx.strokeStyle="#16a085",this.ctx.lineWidth=3,this.ctx.setLineDash([]);break;case"hvdc-line":this.ctx.strokeStyle="#8e44ad",this.ctx.lineWidth=5,this.ctx.setLineDash([15,8]);break}this.ctx.stroke(),this.ctx.setLineDash([]);const o=(s.x+n.x)/2,c=(s.y+n.y)/2;this.ctx.fillStyle="rgba(255, 255, 255, 0.9)",this.ctx.strokeStyle="#34495e",this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.roundRect(o-20,c-8,40,16,4),this.ctx.fill(),this.ctx.stroke(),this.ctx.fillStyle="#2c3e50",this.ctx.font="bold 10px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${t.capacity}MW`,o,c+3)}}drawComponents(){for(const t of this.components.values()){const{x:e,y:i}=t.position;switch(this.ctx.beginPath(),t.type){case"generator":this.ctx.fillStyle="#f39c12",this.ctx.strokeStyle="#e67e22",this.ctx.arc(e,i,15,0,2*Math.PI);break;case"substation":this.ctx.fillStyle="#9b59b6",this.ctx.strokeStyle="#8e44ad",this.ctx.rect(e-12,i-12,24,24);break;case"load":this.ctx.fillStyle="#e74c3c",this.ctx.strokeStyle="#c0392b",this.ctx.moveTo(e,i-15),this.ctx.lineTo(e-13,i+10),this.ctx.lineTo(e+13,i+10),this.ctx.closePath();break}this.ctx.lineWidth=2,this.ctx.fill(),this.ctx.stroke(),this.ctx.fillStyle="#2c3e50",this.ctx.font="12px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${t.capacity}MW`,e,i+35)}}drawTemporaryLine(t,e){const i=this.components.get(t);i&&(this.ctx.beginPath(),this.ctx.moveTo(i.position.x,i.position.y),this.ctx.lineTo(e.x,e.y),this.ctx.strokeStyle="#3498db",this.ctx.lineWidth=2,this.ctx.setLineDash([5,5]),this.ctx.stroke(),this.ctx.setLineDash([]))}drawNetworkTypeIndicator(){this.ctx.fillStyle="#2c3e50",this.ctx.font="16px Arial",this.ctx.textAlign="left",this.ctx.fillText(`Network: ${this.networkType.toUpperCase()}`,10,25)}init(){this.updateButtonStates(),this.render()}undo(){this.currentCommandIndex>=0&&(this.commandHistory[this.currentCommandIndex].undo(),this.currentCommandIndex--,this.updateStats(),this.updateButtonStates(),this.render())}redo(){this.currentCommandIndex<this.commandHistory.length-1&&(this.currentCommandIndex++,this.commandHistory[this.currentCommandIndex].execute(),this.updateStats(),this.updateButtonStates(),this.render())}addCommand(t){this.commandHistory=this.commandHistory.slice(0,this.currentCommandIndex+1),this.commandHistory.push(t),this.currentCommandIndex++,this.commandHistory.length>this.maxHistorySize&&(this.commandHistory.shift(),this.currentCommandIndex--),this.updateButtonStates()}createGridNode(t,e){return{id:`node_${++this.nodeCounter}`,position:t,voltage:e,connectedComponents:[],connectedLines:[],isVisible:!0}}placeGridNode(t){const e=this.createGridNode(t,110),i={id:`cmd_${Date.now()}`,type:"place-node",timestamp:Date.now(),execute:()=>{this.gridNodes.set(e.id,e)},undo:()=>{this.gridNodes.delete(e.id)},data:{node:e}};i.execute(),this.addCommand(i),this.render()}connectComponentToNode(t,e){const i=this.components.get(t),s=this.gridNodes.get(e);i&&s&&(i.connectedNode=e,s.connectedComponents.push(t))}findNearestNode(t,e=30){let i=null,s=e;for(const n of this.gridNodes.values()){const o=Math.sqrt(Math.pow(t.x-n.position.x,2)+Math.pow(t.y-n.position.y,2));o<s&&(s=o,i=n)}return i}drawGridNodes(){for(const t of this.gridNodes.values()){if(!t.isVisible)continue;const{x:e,y:i}=t.position,s=t.connectedComponents.length+t.connectedLines.length;this.ctx.beginPath(),this.ctx.arc(e,i,8,0,2*Math.PI),this.ctx.fillStyle="#34495e",this.ctx.fill(),this.ctx.beginPath(),this.ctx.arc(e,i,8,0,2*Math.PI),this.ctx.strokeStyle="#2c3e50",this.ctx.lineWidth=2,this.ctx.stroke(),s>0&&(this.ctx.beginPath(),this.ctx.arc(e,i,4,0,2*Math.PI),this.ctx.fillStyle="#e74c3c",this.ctx.fill()),s>1&&(this.ctx.beginPath(),this.ctx.arc(e+10,i-10,8,0,2*Math.PI),this.ctx.fillStyle="#3498db",this.ctx.fill(),this.ctx.fillStyle="white",this.ctx.font="bold 10px Arial",this.ctx.textAlign="center",this.ctx.fillText(s.toString(),e+10,i-6)),this.ctx.fillStyle="#2c3e50",this.ctx.font="10px Arial",this.ctx.textAlign="center",this.ctx.fillText(`${t.voltage}kV`,e,i+20)}}drawComponentNodeConnections(){for(const t of this.components.values())if(t.connectedNode){const e=this.gridNodes.get(t.connectedNode);e&&(this.ctx.beginPath(),this.ctx.moveTo(t.position.x,t.position.y),this.ctx.lineTo(e.position.x,e.position.y),this.ctx.strokeStyle="#95a5a6",this.ctx.lineWidth=1,this.ctx.setLineDash([3,3]),this.ctx.stroke(),this.ctx.setLineDash([]))}}canUndo(){return this.currentCommandIndex>=0}canRedo(){return this.currentCommandIndex<this.commandHistory.length-1}updateButtonStates(){const t=document.querySelector("#undo-btn"),e=document.querySelector("#redo-btn");t&&(t.disabled=!this.canUndo()),e&&(e.disabled=!this.canRedo())}handleRightClick(t){t.preventDefault();const e=this.getMousePosition(t),i=this.getComponentAt(e),s=this.getNodeAt(e);i?confirm(`Delete ${i.type} "${i.id}"?`)&&this.deleteComponent(i.id):s&&confirm(`Delete grid node "${s.id}"?`)&&this.deleteGridNode(s.id)}deleteComponent(t){const e=this.components.get(t);if(!e)return;const i=[];for(const n of this.lines.values())(n.from===t||n.to===t)&&i.push(n);const s={id:`cmd_${Date.now()}`,type:"delete-component",timestamp:Date.now(),execute:()=>{if(this.components.delete(t),i.forEach(n=>{this.lines.delete(n.id);const o=n.from===t?n.to:n.from,c=this.components.get(o),a=this.gridNodes.get(o);if(c){const r=c.connections.indexOf(t);r>-1&&c.connections.splice(r,1)}if(a){const r=a.connectedLines.indexOf(n.id);r>-1&&a.connectedLines.splice(r,1)}}),e.connectedNode){const n=this.gridNodes.get(e.connectedNode);if(n){const o=n.connectedComponents.indexOf(t);o>-1&&n.connectedComponents.splice(o,1)}}this.stats.budget+=e.cost},undo:()=>{if(this.components.set(t,e),i.forEach(n=>{this.lines.set(n.id,n);const o=n.from===t?n.to:n.from,c=this.components.get(o),a=this.gridNodes.get(o);c&&!c.connections.includes(t)&&c.connections.push(t),a&&!a.connectedLines.includes(n.id)&&a.connectedLines.push(n.id)}),e.connectedNode){const n=this.gridNodes.get(e.connectedNode);n&&!n.connectedComponents.includes(t)&&n.connectedComponents.push(t)}this.stats.budget-=e.cost},data:{component:e,connectedLines:i}};s.execute(),this.addCommand(s),this.updateStats(),this.render()}deleteGridNode(t){const e=this.gridNodes.get(t);if(!e)return;if(e.connectedComponents.length>0||e.connectedLines.length>0){this.showMessage("Cannot delete grid node with active connections. Remove connected components and lines first.");return}const i={id:`cmd_${Date.now()}`,type:"delete-node",timestamp:Date.now(),execute:()=>{this.gridNodes.delete(t)},undo:()=>{this.gridNodes.set(t,e)},data:{node:e}};i.execute(),this.addCommand(i),this.render()}}const x=document.querySelector("#grid-canvas"),M=document.querySelector("#budget"),N=document.querySelector("#load-served"),k=document.querySelector("#efficiency"),T=document.querySelector("#grid-info"),P=document.querySelector("#frequency"),A=document.querySelector("#reliability"),E=document.querySelector("#renewables"),m=new L(x,M,N,k,T,P,A,E),v=document.querySelectorAll(".tool-btn"),$=document.querySelector("#simulate-btn"),D=document.querySelector("#clear-btn"),q=document.querySelector("#undo-btn"),R=document.querySelector("#redo-btn");v.forEach(d=>{d.addEventListener("click",()=>{v.forEach(e=>e.classList.remove("active")),d.classList.add("active");const t=d.dataset.tool;m.setSelectedTool(t)})});$.addEventListener("click",()=>{m.simulate()});D.addEventListener("click",()=>{confirm("Are you sure you want to clear the entire grid? This action cannot be undone.")&&m.clearGrid()});q.addEventListener("click",()=>{m.undo()});R.addEventListener("click",()=>{m.redo()});function b(){const t=document.querySelector("#grid-area").getBoundingClientRect();x.width=t.width-20,x.height=Math.max(400,t.height-140),m.init()}window.addEventListener("resize",b);b();m.init();document.addEventListener("keydown",d=>{var t,e,i,s,n,o,c;switch(d.key){case"g":m.setSelectedTool("generator"),(t=document.querySelector('[data-tool="generator"]'))==null||t.classList.add("active");break;case"s":m.setSelectedTool("substation"),(e=document.querySelector('[data-tool="substation"]'))==null||e.classList.add("active");break;case"l":m.setSelectedTool("load"),(i=document.querySelector('[data-tool="load"]'))==null||i.classList.add("active");break;case"n":m.setSelectedTool("node"),(s=document.querySelector('[data-tool="node"]'))==null||s.classList.add("active");break;case"t":m.setSelectedTool("transmission-line"),(n=document.querySelector('[data-tool="transmission-line"]'))==null||n.classList.add("active");break;case"d":m.setSelectedTool("distribution-line"),(o=document.querySelector('[data-tool="distribution-line"]'))==null||o.classList.add("active");break;case"h":m.setSelectedTool("hvdc-line"),(c=document.querySelector('[data-tool="hvdc-line"]'))==null||c.classList.add("active");break;case"r":d.ctrlKey&&(d.preventDefault(),m.simulate());break;case"Escape":m.setSelectedTool(null),v.forEach(a=>a.classList.remove("active"));break}});console.log("ð European Power Grid Builder loaded successfully!");console.log("â¡ Keyboard shortcuts:");console.log("ð G - Generator, S - Substation, L - Load, N - Grid Node");console.log("ð T - AC Transmission, D - Distribution, H - HVDC Line");console.log("ð® Ctrl+R - Run Simulation, Ctrl+Z - Undo, Ctrl+Y - Redo");console.log("ð±ï¸ Right-click components/nodes to delete, Escape - Clear Selection");console.log("ðï¸ Build realistic European power grids with multi-connection nodes!");
